# Generated by Django 4.2.13 on 2024-05-31 10:54

from django.contrib.auth.models import Permission
from django.db import migrations


def create_manager_group(apps, schema_editor):
    group = apps.get_model("auth", "Group")
    product = apps.get_model(
        "product", "Product"
    )  # 替换 your_app_name 为包含 Product 模型的应用名称

    # 创建或获取组
    group, created = group.objects.get_or_create(name="Manager")
    if created:
        print("Manager group created")
    else:
        print("Manager group already exists")

    # 获取或创建权限
    # 注意：确保权限名与你的模型和迁移已经创建
    """
    我既然打算用group來控制manager和customer對不同資源的權限，
    那我還要再API裡面實現檢查使用者是manager or customer來決定他是否能訪問的邏輯嗎?
    還是我其實可以group不特別設置permission，只是單純有這個role，然後直接在API裡面直接用group來檢查他是否有權限呢?
    哪一種比較符合最佳實踐呢?
    """
    perms = [
        Permission.objects.get(codename="add_product"),
        Permission.objects.get(codename="change_product"),
        Permission.objects.get(codename="delete_product"),
        Permission.objects.get(codename="view_product"),
    ]

    # 将权限添加到组
    group.permissions.add(*perms)
    group.save()


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_manager_group),
    ]
